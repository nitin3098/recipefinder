{"version":3,"sources":["component/Header.js","component/Recipecomponents.js","App.js","index.js"],"names":["Header","styled","div","AppNamecomponent","Appicon","img","Searchicon","Searchcomponent","Searchinput","input","Recipelistcontainer","Recipecard","Coverimage","Recipename","span","Ingredients","Seemore","Container","Placeholder","Recipecomponent","props","useState","show","setShow","recipeObj","Dialog","open","DialogTitle","id","DialogContent","ingredients","map","ingredientsObj","text","weight","DialogActions","onClick","window","url","src","image","label","App","timeoutid","updateTimeoutid","recipelist","updateRecipelist","fetchrecipe","searchString","a","Axios","get","response","data","hits","alt","placeholder","onChange","event","clearTimeout","timeout","setTimeout","target","value","length","recipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIaA,G,MAASC,IAAOC,IAAV,0PAaNC,EAAmBF,IAAOC,IAAV,kEAKhBE,EAAUH,IAAOI,IAAV,wEAMPC,EAAaL,IAAOI,IAAV,yDAKVE,EAAkBN,IAAOC,IAAV,8IASfM,EAAcP,IAAOQ,MAAV,qHCxCXC,EAAsBT,IAAOC,IAAV,gJASnBS,EAAaV,IAAOC,IAAV,sIASVU,EAAaX,IAAOI,IAAV,gEAKVQ,EAAaZ,IAAOa,KAAV,qFAMVC,EAAcd,IAAOa,KAAV,mNAWXE,EAAUf,YAAOc,EAAPd,CAAH,yE,2CC5BdgB,EAAYhB,IAAOC,IAAV,qEAITgB,EAAcjB,IAAOI,IAAV,yFASVc,EAAkB,SAACC,GACxB,MAAuBC,oBAAS,GAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAYJ,EAAZI,UAEN,OACE,qCACA,eAACC,EAAA,EAAD,CAAQC,KAAQJ,EAAhB,UACA,cAACK,EAAA,EAAD,CAAaC,GAAG,2BAAhB,yBACA,cAACC,EAAA,EAAD,UACE,kCACE,kCACE,6CACA,2CAEF,gCACGL,EAAUM,YAAYC,KAAI,SAACC,GAAD,OAC1B,+BACA,6BAAKA,EAAeC,OACpB,6BAAKD,EAAeE,sBAQ3B,eAACC,EAAA,EAAD,WACE,cAACnB,EAAD,CAASoB,QAAS,kBAAIC,OAAOX,KAAKF,EAAUc,MAA5C,6BACA,cAACvB,EAAD,CAAaqB,QAAS,kBAAIb,GAAQ,IAAlC,yBAGF,eAACZ,EAAD,WACA,cAACC,EAAD,CAAa2B,IAAKf,EAAUgB,QAC5B,cAAC3B,EAAD,UAAaW,EAAUiB,QACvB,cAAC1B,EAAD,CAAaqB,QAAS,kBAAIb,GAAQ,IAAlC,yBACA,cAACP,EAAD,CAASoB,QAAS,kBAAIC,OAAOX,KAAKF,EAAUc,MAA5C,6BAuDWI,MA/Cf,WAEE,IAGA,EAAoCrB,qBAApC,mBAAOsB,EAAP,KAAiBC,EAAjB,KAEA,EAAsCvB,mBAAS,IAA/C,mBAAOwB,EAAP,KAAkBC,EAAlB,KAIQC,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACKC,IAAMC,IAAN,0CACcH,EADd,mBAVZ,WAUY,oBATX,qCAQM,OACZI,EADY,OAIlBN,EAAiBM,EAASC,KAAKC,MAJb,2CAAH,sDAcnB,OACE,eAACrC,EAAD,WACC,eAACjB,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,CAASmC,IAAI,aAAagB,IAAI,SADhC,mBAGA,eAAChD,EAAD,WACE,cAACD,EAAD,CAAYiC,IAAI,mBAAmBgB,IAAI,SACvC,cAAC/C,EAAD,CAAagD,YAAY,gBAAgBC,SAf5B,SAACC,GACnBC,aAAahB,GACb,IAAMiB,EAAUC,YAAW,kBAAId,EAAYW,EAAMI,OAAOC,SAAO,KAC/DnB,EAAgBgB,YAef,cAAClD,EAAD,UACEmC,EAAWmB,OAASnB,EAAWd,KAAI,SAACP,GAAD,OAEnC,cAAC,EAAD,CAAiBA,UAAYA,EAAUyC,YAEnC,cAAC/C,EAAD,CAAaqB,IAAI,qBCzG5B2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ae3921ee.chunk.js","sourcesContent":["\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const Header = styled.div`\r\ncolor: white;\r\nbackground-color: #2C3539;\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 20px;\r\nfont-size: 25px;\r\nfont-weight: bold;\r\nbox-shadow: 0 3px 6px 0 grey;\r\n`;\r\n\r\nexport const AppNamecomponent = styled.div`\r\nalign-items: center;\r\ndisplay: flex;\r\n`;\r\n\r\nexport const Appicon = styled.img`\r\nheight: 44px;\r\nwidth: 44px;\r\nmargin: 15px;\r\n`;\r\n\r\nexport const Searchicon = styled.img`\r\nheight: 34px;\r\nwidth: 34px;\r\n`;\r\n\r\nexport const Searchcomponent = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\nbackground-color: white;\r\npadding: 10px;\r\nborder-radius: 6px;\r\nwidth: 40%;\r\n`;\r\n\r\nexport const Searchinput = styled.input`\r\nborder: none;\r\noutline: none;\r\nmargin-left: 15px;\r\nfont-size: 16px;\r\nfont-weight: bold;\r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const Recipelistcontainer = styled.div`\r\ndisplay: flex;\r\ngap: 20px;\r\nflex-direction: row;\r\njustify-content: space-evenly;\r\npadding: 30px;\r\nflex-wrap: wrap;\r\n`;\r\n\r\nexport const Recipecard = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\npadding: 10px;\r\nwidth: 300px;\r\nbox-shadow: 0 3px 10px 0 #aaa;\r\n\r\n`;\r\n\r\nexport const Coverimage = styled.img`\r\nheight: 220px;\r\nobject-fit: cover;\r\n`;\r\n\r\nexport const Recipename = styled.span`\r\nfont-size: 18px;\r\nfont-weight: bold;\r\n\r\nmargin: 10px 0;\r\n`;\r\nexport const Ingredients = styled.span`\r\nfont-size: 18px;\r\nborder: solid 1px #1589FF;\r\nmargin: 10px 0;\r\ncolor: #1589FF;\r\npadding: 10px 15px;\r\ncursor: pointer;\r\nborder-radius: 4px;\r\ntext-align: center;\r\nmargin-bottom: 10px;\r\n`;\r\nexport const Seemore = styled(Ingredients)`\r\ncolor: #FF6347;\r\nborder: solid 1px #FF6347;\r\n`;\r\n","import React,{ useState } from 'react'\nimport styled from 'styled-components';\nimport Axios from 'axios'\nimport './App.css';\nimport { Header,AppNamecomponent,Appicon,Searchcomponent,Searchicon,Searchinput} from './component/Header'\nimport {\n Recipelistcontainer,Recipecard,Recipename,Ingredients,Seemore,Coverimage\n} from './component/Recipecomponents'\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst Container = styled.div`\ndisplay: flex;\nflex-direction: column;\n`;\nconst Placeholder = styled.img`\nopacity: 50%;\nwidth: 500px;\nheight:500px;\nmargin: 180px;\n`;\n\n\n\nconst  Recipecomponent = (props) =>{\n  const [show,setShow] = useState(false);\nconst { recipeObj }=props;\n\n  return(\n    <>\n    <Dialog open = {show}>\n    <DialogTitle id=\"alert-dialog-slide-title\">INGREDIENTS</DialogTitle>\n    <DialogContent>\n      <table>\n        <thead>\n          <th>Ingredients</th>\n          <th>weight</th>\n        </thead>\n        <tbody>\n          {recipeObj.ingredients.map((ingredientsObj)=>\n           <tr>\n           <td>{ingredientsObj.text}</td>\n           <td>{ingredientsObj.weight}</td>\n\n         </tr>\n         )}\n         \n        </tbody>\n      </table>\n    </DialogContent>\n    <DialogActions>\n      <Seemore onClick={()=>window.open(recipeObj.url)}>See Full Recipe</Seemore>\n      <Ingredients onClick={()=>setShow(false)}>Close</Ingredients>\n    </DialogActions>\n      </Dialog>\n    <Recipecard >\n    <Coverimage  src={recipeObj.image} />\n    <Recipename>{recipeObj.label}</Recipename>\n    <Ingredients onClick={()=>setShow(true)}>ingredients</Ingredients>\n    <Seemore onClick={()=>window.open(recipeObj.url)}>see more</Seemore>\n    </Recipecard>\n    </>\n  );\n}\n \n\n\nfunction App() {\n\n  const APP_ID = \"d34f62ab\";\n  const APP_KEY = \"1b721e3454c604ad3f9e7754161f680f\";\n\n  const [timeoutid,updateTimeoutid] = useState(); \n\n  const [recipelist,updateRecipelist] = useState([]);\n\n  \n\n    const fetchrecipe = async (searchString) => {\n      const response = await Axios.get(\n        `https://api.edamam.com/search?q=${searchString}&app_id=${APP_ID}&app_key=${APP_KEY}`,\n      );\n      updateRecipelist(response.data.hits);\n    };\n\n  const onTextchange =(event) =>{\n    clearTimeout(timeoutid);\n    const timeout = setTimeout(()=>fetchrecipe(event.target.value),1000);\n    updateTimeoutid(timeout);\n  }\n\n\n  return (\n    <Container>\n     <Header>\n       <AppNamecomponent>\n         <Appicon src=\"/pizza.svg\" alt=\"img1\"/>\n         Recipe Finder</AppNamecomponent>\n       <Searchcomponent>\n         <Searchicon src=\"/search-icon.svg\" alt=\" img\"/>\n         <Searchinput placeholder=\"search recipe\" onChange={ onTextchange }/>\n       </Searchcomponent>\n     </Header>\n     <Recipelistcontainer>\n      {recipelist.length ? recipelist.map((recipeObj)=>(\n       \n       <Recipecomponent recipeObj= {recipeObj.recipe}/>\n\n      )) : <Placeholder src=\"/pizza.svg\"/>}\n       </Recipelistcontainer> \n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}